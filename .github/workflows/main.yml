# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Build and Run Tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
    - name: Build with Gradle
      run: ./gradlew build
    

  test:
    #needs: build
    runs-on: ubuntu-latest

    container:
      image: node:14.4
      options: --network-alias testHost
      env:
        NODE_ENV: test
        SELENIUM_HUB_HOST: hub
        TEST_HOST: testHost
    services:
      hub:
        image: selenium/hub
      chrome:
        image: selenium/node-chrome
        env:
          HUB_HOST: hub
          HUB_PORT: 4444

#    services:
#      zalenium:
#        image: dosel/zalenium
#        env:
#          PULL_SELENIUM_IMAGE: true
#          HUB_HOST: localhost
#          HUB_PORT: 4444
#          SELENIUM_HUB_HOST: 'localhost'
#        volumes:
#          - /var/run/docker.sock:/var/run/docker.sock
#          - /tmp/videos:/home/seluser/videos
#        ports:
#          - 4444:4444
#        options: >-
#          --privileged
#          --health-cmd "curl -sSL http://localhost:4444/wd/hub/status"
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5




    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
#    - name: Start up Zalenium stack
#      working-directory: ./docker
#      run: docker-compose up --force-recreate -d
    - name: Debugging of Selenium localhost
      run: curl -sSL http://hub:4444/wd/hub/status
    - name: Run tests
      run: ./gradlew cleanUp playground
    - name: Generate Report
      if: ${{ always() }}
      run: ./gradlew allureReport
    - name: Publish Test Report
      if: ${{ always() }}
      uses: actions/upload-artifact@v2
      with:
        name: allure-report
        path: ./build/reports/allure-report
#    - name: Publish Report
#      uses: afiore/action-allure-report@1
#        with:
#          results-dir: ./build/allure-results
#          report-dir: ./build/allure-report

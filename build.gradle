buildscript {
    repositories {
        mavenCentral()
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "io.qameta.allure:allure-gradle:<latest>"
    }
}

plugins {
    id 'java'
    id 'io.qameta.allure' version '2.8.1'
}

allure {
    autoconfigure = true
    version = '2.8.1'
}

repositories {
    mavenCentral()
}

group 'org.dawix'
version '1.0-SNAPSHOT'

sourceCompatibility = 11

dependencies {
    compile group: 'org.seleniumhq.selenium', name: 'selenium-java', version: '3.141.59'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-server', version: '3.141.59'
    compile group: 'org.seleniumhq.selenium', name: 'selenium-remote-driver', version: '3.141.59'
    compile group: 'org.testng', name: 'testng', version: '6.14.3'
    compile group: 'io.github.bonigarcia', name: 'webdrivermanager', version: '3.3.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.11.2'
    compile group: 'io.qameta.allure', name: 'allure-testng', version: '2.13.2'
}


tasks.withType(Test) {
    group = "Verification"
    testLogging {
        events "PASSED", "FAILED", "SKIPPED"
    }
}

def configureAndRunTest(def task, def suiteList, def reportDestination) {
    task.reports.html.enabled = false
    task.testLogging.showStandardStreams = true
    task.reports.html.destination = file("$buildDir/reports/" + reportDestination)
    task.useTestNG {
        useDefaultListeners = true
        configFailurePolicy 'skip'
        suiteList.each {
            suites(it)
        }
    }
}

task cleanUp(type: Delete) {
    group "Verification"
    dependsOn clean
    description = "Cleans up project and additional directories"
    delete fileTree("${rootDir}/logs") {
        include '**/*.*'
        exclude '**/.gitignore'
    }
}

task playground(type: Test) {
    description = "playground"
    def reportDestination = name
    systemProperties['logFilename'] = 'GridTestsLogs'
    def suiteList = ["suites/gridTest.xml"]
    configureAndRunTest(it, suiteList, reportDestination)
}

task testExecutor(type: Test) {
    useTestNG {
        useDefaultListeners = true
        configFailurePolicy 'skip'
    }
    include 'org/dawix/tests/TestExecutor'
}

task executeTests(type: Test) {
    def suiteList = ["suites/testRunner.xml"]
    def reportDestination = name
    configureAndRunTest(it, suiteList, reportDestination)
}